- content_for :page_styles do
  = javascript_pack_tag "user"
%h2.prompt= t(".title", resource: resource.model_name.human)
%h3= t(".edit_acount")
= simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
  .form-inputs
    = f.input :email, required: true, as: :email, autofocus: true
    = f.input :current_password,
      required: true,
      input_html: { autocomplete: "current-password" }
    - if devise_mapping.confirmable? && resource.pending_reconfirmation?
      %p= t(".currently_waiting_confirmation_for_email", email: resource.unconfirmed_email)
    #change-password{ class: change_password_fields_class(resource) }
      = f.input :password,
        label: t(".new_password"),
        disabled: password_change_field_disabled?(resource),
        input_html: { autocomplete: "new-password" }
      = f.input :password_confirmation,
        disabled: password_change_field_disabled?(resource),
        label: t(".new_password_again"),
        input_html: { autocomplete: "new-password" }
  .form-actions
    = f.button :submit, t(".save")
    %span.options
      %a#toggle-password{ href: "javascript:;" }
        = t(".change_password")
      %span
        = t(".unhappy")
        = link_to t(".delete_my_account"), registration_path(resource_name),
          data: { confirm: t(".are_you_sure") }, method: :delete, class: "warning"

%h3= t(".invite_user")
= simple_form_for(UserInvitation.new, url: user_invitations_path) do |f|
  = f.input :recipient_email
  = f.submit

%table
  %thead
    %tr
      %th= t(".user_invitations.recipient_email")
      %th= t(".user_invitations.sent_at")
      %th= t(".user_invitations.accepted_at")
  %tbody.invite-table
    - if !@invitations.nil? && @invitations.empty?
      %td= t(".user_invitations.no_one_yet")
    - else
      - @invitations.to_a.each do |invite|
        %tr{ id: "invite-#{invite.id}" }
          %td= invite.recipient_email
          %td= invite.sent_at
          %td= invite.accepted_at

