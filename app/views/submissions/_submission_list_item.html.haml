.submission.votable{ id: submission.short_id, class: submission_classes_for(submission) }
  %span.scoring{ id: "scoring_#{submission.short_id}" }
    .upvote{ id: "upvote_#{submission.short_id}", class: control_classes(submission, :upvote) }
      .score{ id: "score_#{submission.short_id}", class: control_classes(submission, :score) }
      = submission.score
    .downvote{ id: "downvote_#{submission.short_id}", class: control_classes(submission, :downvote) }
  .submission-title
    .submission-line1
      %span.submission-link= link_to(submission.title, submission_href_for(submission))
      %span.submission-tags
        - submission.tags.each do |tag|
          = render "shared/tag", tag: tag
      %span.submission-domain
        %i= submission.domain_name.presence
    .submission-line2
      %span.submission-info
        = submitted_by_text(submission)
      %span.submission-user
        = link_to submission.submitter_username, "#"
      %span.submission-info
        %span.submission-time
          = submitted_time_text(submission)
      %span.submission-info
        = link_to hide_link_text_for(submission), "", class: "hide"
        = link_to save_link_text_for(submission), "", class: "save"
        - if current_user.present? && current_user.has_mod_permissions?
          - if submission.removed
            = link_to t(".actions.removed"),
              admin_submission_removal_path(submission.submission_removal),
              class: "mod-action-removed"
          - else
            = link_to t(".actions.remove"),
              new_admin_submission_removal_path(submission_removal: { submission_short_id: submission.short_id }),
              class: "mod-action-remove"
      %span.submission-comments
        = link_to t(".comments", count: submission.comment_count),
          submission_path(submission.short_id)
